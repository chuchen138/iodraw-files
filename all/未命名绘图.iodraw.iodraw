<mxGraphModel dx="1414" dy="791" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="_5mSTuPxr-ZiKRkBDSY7-1" value="" style="swimlane;fontStyle=2;childLayout=stackLayout;horizontal=1;startSize=28;horizontalStack=1;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=0;marginBottom=0;swimlaneFillColor=none;fontFamily=Permanent Marker;fontSize=16;points=[];verticalAlign=top;stackBorder=0;resizable=1;strokeWidth=2;sketch=1;disableMultiStroke=1;" parent="1" vertex="1"><mxGeometry x="160" y="80" width="540" height="440" as="geometry"/></mxCell><object label="TO DO" status="New" id="_5mSTuPxr-ZiKRkBDSY7-2"><mxCell style="swimlane;strokeWidth=2;fontFamily=Permanent Marker;html=0;startSize=1;verticalAlign=bottom;spacingBottom=5;points=[];childLayout=stackLayout;stackBorder=20;stackSpacing=20;resizeLast=0;resizeParent=1;horizontalStack=0;collapsible=0;sketch=1;strokeColor=none;fillStyle=solid;fillColor=#A0522D;" parent="_5mSTuPxr-ZiKRkBDSY7-1" vertex="1"><mxGeometry y="28" width="180" height="412" as="geometry"/></mxCell></object><object label="DOING" status="In progress" id="_5mSTuPxr-ZiKRkBDSY7-6"><mxCell style="swimlane;strokeWidth=2;fontFamily=Permanent Marker;html=0;startSize=1;verticalAlign=bottom;spacingBottom=5;points=[];childLayout=stackLayout;stackBorder=20;stackSpacing=20;resizeLast=0;resizeParent=1;horizontalStack=0;collapsible=0;sketch=1;strokeColor=none;fillStyle=solid;fillColor=#006600;" parent="_5mSTuPxr-ZiKRkBDSY7-1" vertex="1"><mxGeometry x="180" y="28" width="180" height="412" as="geometry"/></mxCell></object><object label="DONE" status="Completed" id="_5mSTuPxr-ZiKRkBDSY7-9"><mxCell style="swimlane;strokeWidth=2;fontFamily=Permanent Marker;html=0;startSize=1;verticalAlign=bottom;spacingBottom=5;points=[];childLayout=stackLayout;stackBorder=20;stackSpacing=20;resizeLast=0;resizeParent=1;horizontalStack=0;collapsible=0;sketch=1;strokeColor=none;fillStyle=solid;fillColor=#1BA1E2;" parent="_5mSTuPxr-ZiKRkBDSY7-1" vertex="1"><mxGeometry x="360" y="28" width="180" height="412" as="geometry"/></mxCell></object><mxCell id="GrBoLloCAVhf_w7-Sh9M-1" value="&lt;div style=&quot;color: rgb(188, 190, 196);&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot; , monospace ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #cf8e6d&quot;&gt;type &lt;/span&gt;Pool &lt;span style=&quot;color: #cf8e6d&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;capacity&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; of the pool, a negative value means that the &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;capacity&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; of pool is limitless, an infinite pool is used to&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    // avoid potential issue of endless blocking caused by nested usage of a pool: submitting a task to pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    // which submits a new task to the same pool.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;capacity &lt;span style=&quot;color: #cc7832&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;running&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; is the number of the currently &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;running&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; goroutines.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;running &lt;span style=&quot;color: #cc7832&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;lock&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; for protecting the &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;worker&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; queue.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;lock &lt;span style=&quot;color: #afbf7e&quot;&gt;sync&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Locker&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;workers&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; is a slice that store the available &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;workers&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;workers &lt;span style=&quot;color: #6fafbd&quot;&gt;workerQueue&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; is used to notice the pool to closed itself.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;state &lt;span style=&quot;color: #cc7832&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;cond&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; for &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;waiting&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; to get an idle &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;worker&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;cond *&lt;span style=&quot;color: #afbf7e&quot;&gt;sync&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Cond&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;workerCache&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; speeds up the obtainment of a usable &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;worker&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; in function:retrieveWorker.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;workerCache &lt;span style=&quot;color: #afbf7e&quot;&gt;sync&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #a1a1a1&quot;&gt;waiting&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt; is the number of goroutines already been blocked on pool.Submit(), protected by pool.lock&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;waiting &lt;span style=&quot;color: #cc7832&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;purgeDone &lt;span style=&quot;color: #cc7832&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;stopPurge &lt;span style=&quot;color: #afbf7e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;CancelFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;ticktockDone &lt;span style=&quot;color: #cc7832&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;stopTicktock &lt;span style=&quot;color: #afbf7e&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;CancelFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;now &lt;span style=&quot;color: #afbf7e&quot;&gt;atomic&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Value&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;options *&lt;span style=&quot;color: #6fafbd&quot;&gt;Options&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;" vertex="1" parent="1"><mxGeometry x="50" y="490" width="1000" height="260" as="geometry"/></mxCell></root></mxGraphModel>