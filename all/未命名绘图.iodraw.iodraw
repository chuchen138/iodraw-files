<mxGraphModel dx="1414" dy="791" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="GrBoLloCAVhf_w7-Sh9M-1" value="&lt;div&gt;&lt;pre style=&quot;font-family: &amp;#34;jetbrains mono&amp;#34; , monospace ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: rgb(207 , 142 , 109)&quot;&gt;type &lt;/span&gt;Pool &lt;span style=&quot;color: rgb(207 , 142 , 109)&quot;&gt;struct &lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;{&lt;br&gt;    &lt;/font&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;capacity&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; of the pool, a negative value means that the &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;capacity&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; of pool is limitless, an infinite pool is used to&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    // avoid potential issue of endless blocking caused by nested usage of a pool: submitting a task to pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    // which submits a new task to the same pool.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;capacity &lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;int32&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;running&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; is the number of the currently &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;running&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; goroutines.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;running &lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;int32&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;lock&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; for protecting the &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;worker&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; queue.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;lock &lt;span style=&quot;color: rgb(175 , 191 , 126)&quot;&gt;sync&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;Locker&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;workers&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; is a slice that store the available &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;workers&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;workers &lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;workerQueue&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; is used to notice the pool to closed itself.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;state &lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;int32&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;cond&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; for &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;waiting&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; to get an idle &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;worker&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;cond &lt;font color=&quot;#bcbec4&quot;&gt;*&lt;/font&gt;&lt;span style=&quot;color: rgb(175 , 191 , 126)&quot;&gt;sync&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;Cond&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;workerCache&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; speeds up the obtainment of a usable &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;worker&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; in function:retrieveWorker.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;workerCache &lt;span style=&quot;color: rgb(175 , 191 , 126)&quot;&gt;sync&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;Pool&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161 , 161 , 161)&quot;&gt;waiting&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt; is the number of goroutines already been blocked on pool.Submit(), protected by pool.lock&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(122 , 126 , 133)&quot;&gt;    &lt;/span&gt;waiting &lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;int32&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;    &lt;/span&gt;purgeDone &lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;    &lt;/span&gt;stopPurge &lt;span style=&quot;color: rgb(175 , 191 , 126)&quot;&gt;context&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;CancelFunc&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;ticktockDone &lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;int32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204 , 120 , 50)&quot;&gt;    &lt;/span&gt;stopTicktock &lt;span style=&quot;color: rgb(175 , 191 , 126)&quot;&gt;context&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;CancelFunc&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;now &lt;span style=&quot;color: rgb(175 , 191 , 126)&quot;&gt;atomic&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;.&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;Value&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;    &lt;/span&gt;options&lt;font color=&quot;#bcbec4&quot;&gt; *&lt;/font&gt;&lt;span style=&quot;color: rgb(111 , 175 , 189)&quot;&gt;Options&lt;br&gt;&lt;/span&gt;&lt;font color=&quot;#bcbec4&quot;&gt;}&lt;/font&gt;&lt;/pre&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;" vertex="1" parent="1"><mxGeometry x="30" y="30" width="930" height="440" as="geometry"/></mxCell><mxCell id="GrBoLloCAVhf_w7-Sh9M-2" value="&lt;div style=&quot;background-color: #1e1f22 ; color: #bcbec4&quot;&gt;&lt;pre style=&quot;font-family: &amp;quot;jetbrains mono&amp;quot; , monospace ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #cf8e6d&quot;&gt;type &lt;/span&gt;worker &lt;span style=&quot;color: #cf8e6d&quot;&gt;interface &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #56a8f5&quot;&gt;run&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color: #56a8f5&quot;&gt;finish&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color: #56a8f5&quot;&gt;lastUsedTime&lt;/span&gt;() &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Time&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #56a8f5&quot;&gt;inputFunc&lt;/span&gt;(&lt;span style=&quot;color: #cf8e6d&quot;&gt;func&lt;/span&gt;())&lt;br&gt;    &lt;span style=&quot;color: #56a8f5&quot;&gt;inputParam&lt;/span&gt;(&lt;span style=&quot;color: #cf8e6d&quot;&gt;interface&lt;/span&gt;{})&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 9.8pt ; white-space: normal&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;span style=&quot;color: #cf8e6d&quot;&gt;type &lt;/span&gt;workerQueue &lt;span style=&quot;color: #cf8e6d&quot;&gt;interface &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #56a8f5&quot;&gt;len&lt;/span&gt;() &lt;span style=&quot;color: #cc7832&quot;&gt;int&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #56a8f5&quot;&gt;isEmpty&lt;/span&gt;() &lt;span style=&quot;color: #cc7832&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #56a8f5&quot;&gt;insert&lt;/span&gt;(&lt;span style=&quot;color: #6fafbd&quot;&gt;worker&lt;/span&gt;) &lt;span style=&quot;color: #cc7832&quot;&gt;error&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #56a8f5&quot;&gt;detach&lt;/span&gt;() &lt;span style=&quot;color: #6fafbd&quot;&gt;worker&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #56a8f5&quot;&gt;refresh&lt;/span&gt;(duration &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Duration&lt;/span&gt;) []&lt;span style=&quot;color: #6fafbd&quot;&gt;worker &lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;// clean up the stale workers and return them&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #7a7e85&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #56a8f5&quot;&gt;reset&lt;/span&gt;()&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 9.8pt ; white-space: normal&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;" vertex="1" parent="1"><mxGeometry x="60" y="480" width="600" height="260" as="geometry"/></mxCell></root></mxGraphModel>